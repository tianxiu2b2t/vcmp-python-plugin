
name: Docker build

on:
  push: 
    branches: [ master ]

jobs:
  build_and_upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        arch: ['x64']
        python-version: ['3.13']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: cargo build --release

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: libraries_${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.python-version }}
          path: |
            target/release/*.dll
            target/release/*.so

      - name: Save Artifact Names
        run: echo "artifact_name=libraries_${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.python-version }}" >> $GITHUB_ENV
    
  build-multiarch:
    runs-on: ubuntu-latest
    needs: build_and_upload
    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: List Artifacts
        run: |
          echo "Artifacts available: ${{ needs.build_and_upload.outputs.artifact_name }}"
  
      - name: Download DLL Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_and_upload.outputs.artifact_name }} # 动态获取工件名称
          path: ./dl_libraries

      - name: Move downloaded DLLs to libraries folder and clean empty folders
        run: |
          mkdir -p libraries

          cp dl_libraries/**/*.so libraries/

          rm -rf dl_libraries
          
      - name: List Artifacts after download
        run: ls -a ./libraries

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            atianxiua/vcmp-python:next
          platforms: linux/amd64