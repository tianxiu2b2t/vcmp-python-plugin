
name: Docker build

on:
  push: 
    branches: [ master ]

jobs:
  build_and_upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: ['x64']
        python-version: ['3.13']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install CMake
        uses: ssrobins/install-cmake@v1
        with:
          version: 4.0.1

      - name: Clone Dependencies
        run: |
          git clone https://github.com/pybind/pybind11.git

      - name: Configure CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          if [ "$ARCH" = "x64" ]; then
            cmake -G "Visual Studio 17 2022" -A x64 -S . -B build -DCMAKE_BUILD_TYPE=Release
          else
            cmake -G "Visual Studio 17 2022" -A Win32 -S . -B build -DCMAKE_BUILD_TYPE=Release
          fi
        shell: bash
        env:
          ARCH: ${{ matrix.arch }}

      - name: Configure CMake (Linux)
        if: runner.os == 'Linux'
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build with CMake
        run: cmake --build build --config Release

      - name: debug
        run: |
          strings /usr/lib/x86_64-linux-gnu/libstdc++.so.6 | grep GLIBCXX

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Move downloaded DLLs to libraries folder and clean empty folders
        run: |
          mkdir -p libraries

          cp build/*.so libraries/

          rm -rf build
          
      - name: List Artifacts
        run: ls -a ./libraries

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            atianxiua/vcmp-python:next
          platforms: linux/amd64