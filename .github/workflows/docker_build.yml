
name: Docker build

on:
  push: 
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set Release Version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build Libraries (with Setup Python)
        uses: ./.github/actions/build-libraries
        with:
          python-version: 3.13
          os: ubuntu-22.04
    
  build-multiarch:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: List Artifacts
        run: |
          echo "Artifacts available: ${{ needs.build.outputs.artifact_name }}"
  
      - name: Download DLL Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact_name }} # 动态获取工件名称
          path: ./dl_libraries

      - name: Move downloaded DLLs to libraries folder and clean empty folders
        run: |
          mkdir -p libraries

          # 处理 Windows DLL 文件
          for file in dl_libraries/**/*.dll; do
            if [[ $file =~ libraries_windows-latest_x64_([0-9]+)\.([0-9]+) ]]; then
              major="${BASH_REMATCH[1]}"
              minor="${BASH_REMATCH[2]}"
              version="${major}${minor}"
              new_name="vcmp-python-plugin-04rel64-rspyo3-py${version}.dll"
              cp "$file" "libraries/$new_name"
            fi
          done

          # 处理 Linux SO 文件
          for file in dl_libraries/**/*.so; do
            if [[ $file =~ libraries_ubuntu-22.04_x64_([0-9]+)\.([0-9]+) ]]; then
              major="${BASH_REMATCH[1]}"
              minor="${BASH_REMATCH[2]}"
              version="${major}${minor}"
              new_name="vcmp-python-plugin-04rel64-rspyo3-py${version}.so"
              cp "$file" "libraries/$new_name"
            fi
          done

          # 清理下载目录
          rm -rf dl_libraries
          
      - name: List Artifacts after download
        run: ls -a ./libraries

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HUB_USERNAME }}
          password: ${{ secrets.HUB_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            atianxiua/vcmp-python:next
          platforms: linux/amd64