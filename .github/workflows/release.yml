name: Build and Upload DLL & Create tagged release and publish to PyPI

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  build_and_upload:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        arch: ['x64']
        python-version: ['3.10', '3.11', '3.12', '3.13']

  release_and_publish:
    # 发布到 GitHub Release 和 PyPI
    runs-on: ubuntu-latest
    #needs: build_and_upload

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Create release
        run: npx @github-tools/changelogithub-chinese
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Set up Python for PyPI
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies for PyPI
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish package to PyPI
        run: |
          python setup.py sdist bdist_wheel
        #  twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

      - name: Download DLL Artifacts
        uses: actions/download-artifact@v4
        with:
          name: DLLs-${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.python-version }}
          path: ./dlls

      - name: Upload DLL to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./dlls/*
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}