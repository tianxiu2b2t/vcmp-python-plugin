/* Automatically generated by bindgen, based on the cleaned C header.
   You may want to adjust types to match your actual ABI (e.g., extern "C").
   
   This is a generated file by github copliot.
*/

#[repr(C)]
pub struct NPCExports {
    pub uStructSize: ::std::os::raw::c_uint,
    pub StartRecordingPlayerData: Option<extern "C" fn(playerId: i32, recordtype: u8, recordname: *const ::std::os::raw::c_char, flags: u32) -> bool>,
    pub StopRecordingPlayerData: Option<extern "C" fn(playerId: i32) -> bool>,
    pub CallNPCClient: Option<extern "C" fn(
        szName: *const ::std::os::raw::c_char,
        szScript: *const ::std::os::raw::c_char,
        bConsoleInputEnabled: bool,
        host: *const ::std::os::raw::c_char,
        plugins: *const ::std::os::raw::c_char,
        execArg: *const ::std::os::raw::c_char,
        loc: *const ::std::os::raw::c_char,
        params: *const *const ::std::os::raw::c_char,
        params_count: usize,
    ) -> bool>,
    pub IsPlayerNPC: Option<extern "C" fn(playerId: u8) -> bool>,
    pub StartRecordingAllPlayerData: Option<extern "C" fn(recordtype: u8, flags: u32, recordnewplayers: bool) -> u8>,
    pub StopRecordingAllPlayerData: Option<extern "C" fn() -> u8>,
    pub IsPlayerRecording: Option<extern "C" fn(bytePlayerId: u8) -> bool>,
    pub PutServerInRecordingMode: Option<extern "C" fn(recordtype: u8, flags: u32, filename: *const ::std::os::raw::c_char) -> bool>,
    pub StopServerInRecordingMode: Option<extern "C" fn() -> bool>,
    pub IsServerInRecordingMode: Option<extern "C" fn() -> bool>,
    pub StopConnectingMultipleNpcs: Option<extern "C" fn() -> bool>,
    pub ConnectMultipleNpcs: Option<extern "C" fn(filename: *const ::std::os::raw::c_char, host: *const ::std::os::raw::c_char, flags: u32, execArg: *const ::std::os::raw::c_char) -> u8>,
}